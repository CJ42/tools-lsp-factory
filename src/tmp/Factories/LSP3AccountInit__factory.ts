/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { LSP3AccountInit, LSP3AccountInitInterface } from '../LSP3AccountInit';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
    ],
    name: 'ContractCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'value',
        type: 'bytes',
      },
    ],
    name: 'DataChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_operation',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'Executed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'typeId',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'returnedValue',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'receivedData',
        type: 'bytes',
      },
    ],
    name: 'UniversalReceiver',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'ValueReceived',
    type: 'event',
  },
  {
    inputs: [],
    name: 'allDataKeys',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dataCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'dataKeys',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_operation',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
    ],
    name: 'getData',
    outputs: [
      {
        internalType: 'bytes',
        name: '_value',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_keys',
        type: 'bytes32[]',
      },
    ],
    name: 'getDataMultiple',
    outputs: [
      {
        internalType: 'bytes[]',
        name: '',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_hash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'isValidSignature',
    outputs: [
      {
        internalType: 'bytes4',
        name: 'magicValue',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_value',
        type: 'bytes',
      },
    ],
    name: 'setData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_keys',
        type: 'bytes32[]',
      },
      {
        internalType: 'bytes[]',
        name: '_values',
        type: 'bytes[]',
      },
    ],
    name: 'setDataMultiple',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_typeId',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'universalReceiver',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'returnValue',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506123a3806100206000396000f3fe6080604052600436106100ec5760003560e01c80636bb56a141161008a578063c4d66de811610059578063c4d66de8146102be578063c559acef146102de578063ec89dc1c14610300578063f2fde38b1461032057600080fd5b80636bb56a1414610241578063715018a6146102615780637f23690c146102765780638da5cb5b1461029657600080fd5b8063456cc348116100c6578063456cc348146101a857806354f6127f146101d5578063595fa1e5146102025780635da40c471461022257600080fd5b806301ffc9a7146101255780631626ba7e1461015a57806344c028fe1461019357600080fd5b3661012057604051349033907f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf73605666423349390600090a3005b600080fd5b34801561013157600080fd5b50610145610140366004611f5a565b610340565b60405190151581526020015b60405180910390f35b34801561016657600080fd5b5061017a610175366004611e9f565b610380565b6040516001600160e01b03199091168152602001610151565b6101a66101a1366004611f94565b61049d565b005b3480156101b457600080fd5b506101c86101c3366004611d51565b610510565b60405161015191906120e9565b3480156101e157600080fd5b506101f56101f0366004611e21565b6105c9565b6040516101519190612178565b34801561020e57600080fd5b506101a661021d366004611d93565b61066b565b34801561022e57600080fd5b506067545b604051908152602001610151565b34801561024d57600080fd5b5061023361025c366004611e53565b610722565b34801561026d57600080fd5b506101a66108c7565b34801561028257600080fd5b506101a6610291366004611e53565b61092d565b3480156102a257600080fd5b506035546040516001600160a01b039091168152602001610151565b3480156102ca57600080fd5b506101a66102d9366004611d2f565b610a37565b3480156102ea57600080fd5b506102f3610ac2565b60405161015191906120a5565b34801561030c57600080fd5b5061023361031b366004611e21565b610b1a565b34801561032c57600080fd5b506101a661033b366004611d2f565b610b3b565b60006301ffc9a760e01b6001600160e01b03198316148061037a57506001600160e01b0319821660009081526020819052604090205460ff165b92915050565b600061039d6103976035546001600160a01b031690565b3b151590565b1561044d576103b2630b135d3f60e11b610340565b6103c4576001600160e01b0319610446565b603554604051630b135d3f60e11b81526001600160a01b0390911690631626ba7e906103f6908690869060040161214b565b60206040518083038186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104469190611f77565b905061037a565b6104578383610c1a565b6001600160a01b03166104726035546001600160a01b031690565b6001600160a01b03161461048e576001600160e01b0319610446565b50630b135d3f60e11b92915050565b6035546001600160a01b031633146104fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6105098585858585610c3e565b5050505050565b60608160008167ffffffffffffffff81111561052e5761052e612341565b60405190808252806020026020018201604052801561056157816020015b606081526020019060019003908161054c5790505b50905060005b828110156105c0576105908686838181106105845761058461232b565b905060200201356105c9565b8282815181106105a2576105a261232b565b602002602001018190525080806105b8906122e4565b915050610567565b50949350505050565b60008181526001602052604090208054606091906105e6906122a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906122a9565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b50505050509050919050565b6035546001600160a01b031633146106c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f3565b60005b83811015610509576107108585838181106106e5576106e561232b565b905060200201358484848181106106fe576106fe61232b565b90506020028101906102919190612233565b8061071a816122e4565b9150506106c8565b60008061074e7f0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b476105c9565b90506000915080516014141561087a57600061076b826000610e75565b6040516301ffc9a760e01b815263c2d7bcc160e01b60048201529091506001600160a01b038216906301ffc9a79060240160206040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190611dff565b156108785760405163c2d7bcc160e01b81526001600160a01b0382169063c2d7bcc1906108239033908a908a908a90600401612072565b602060405180830381600087803b15801561083d57600080fd5b505af1158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190611e3a565b92505b505b8185336001600160a01b03167f54b98940949b5ac0325c889c84db302d4e18faec431b48bdc81706bfe482cfbd87876040516108b7929190612164565b60405180910390a4509392505050565b6035546001600160a01b031633146109215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f3565b61092b6000610eeb565b565b6035546001600160a01b031633146109875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f3565b600083815260016020526040902080546109a0906122a9565b151590506109de57606780546001810182556000919091527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae018390555b60008381526001602052604090206109f7908383611b7f565b50827fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b28383604051610a2a929190612164565b60405180910390a2505050565b610a4081610f55565b606780546001810182556000919091527feafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d67f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae90910155610abf7f6bb56a14000000000000000000000000000000000000000000000000000000006110ec565b50565b60606067805480602002602001604051908101604052809291908181526020018280548015610b1057602002820191906000526020600020905b815481526020019060010190808311610afc575b5050505050905090565b60678181548110610b2a57600080fd5b600091825260209091200154905081565b6035546001600160a01b03163314610b955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f3565b6001600160a01b038116610c115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104f3565b610abf81610eeb565b6000806000610c29858561116b565b91509150610c36816111db565b509392505050565b82846001600160a01b0316867f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b88585604051610c7b929190612164565b60405180910390a460006109c45a610c939190612292565b905085610ce257610cdd858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879250611396915050565b610e6d565b6003861415610d3157610d2b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113bd92505050565b50610e6d565b6002861415610e25576000610d8884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d83925060209150879050612292565b611459565b90506000610dd785858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610dd291506020905088612292565b6114bf565b90506000610de68784846115e6565b6040519091506001600160a01b038216907fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31290600090a2505050610e6d565b60405162461bcd60e51b815260206004820152601460248201527f57726f6e67206f7065726174696f6e207479706500000000000000000000000060448201526064016104f3565b505050505050565b6000610e8282601461227a565b83511015610ed25760405162461bcd60e51b815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e6473000000000000000000000060448201526064016104f3565b5001602001516c01000000000000000000000000900490565b603580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600254610100900460ff1680610f6e575060025460ff16155b610fd15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f3565b600254610100900460ff16158015610ff3576002805461ffff19166101011790555b610ffc826116f0565b6040517fafdeb5d60000000000000000000000000000000000000000000000000000000060208201527feafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d69060240160408051601f19818403018152918152600083815260016020908152919020825161107a93919290910190611c03565b50807fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2600160008481526020019081526020016000206040516110bd919061218b565b60405180910390a26110d5630b135d3f60e11b6110ec565b5080156110e8576002805461ff00191690555b5050565b6001600160e01b031980821614156111465760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016104f3565b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6000808251604114156111a25760208301516040840151606085015160001a611196878285856117b5565b945094505050506111d4565b8251604014156111cc57602083015160408401516111c18683836118a2565b9350935050506111d4565b506000905060025b9250929050565b60008160048111156111ef576111ef612315565b14156111f85750565b600181600481111561120c5761120c612315565b141561125a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104f3565b600281600481111561126e5761126e612315565b14156112bc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f3565b60038160048111156112d0576112d0612315565b14156113295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f3565b600481600481111561133d5761133d612315565b1415610abf5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f3565b600080835160208501868886f18015600181146113b257610e6d565b3d806000803e806000fd5b600081516020830184f090506001600160a01b03811661141f5760405162461bcd60e51b815260206004820152601960248201527f436f756c64206e6f74206465706c6f7920636f6e74726163740000000000000060448201526064016104f3565b6040516001600160a01b038216907fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca31290600090a292915050565b600061146682602061227a565b835110156114b65760405162461bcd60e51b815260206004820152601560248201527f746f427974657333325f6f75744f66426f756e6473000000000000000000000060448201526064016104f3565b50016020015190565b6060816114cd81601f61227a565b101561151b5760405162461bcd60e51b815260206004820152600e60248201527f736c6963655f6f766572666c6f7700000000000000000000000000000000000060448201526064016104f3565b611525828461227a565b845110156115755760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016104f3565b60608215801561159457604051915060008252602082016040526105c0565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156115cd5780518352602092830192016115b5565b5050858452601f01601f19166040525050949350505050565b600080844710156116395760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064016104f3565b82516116875760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016104f3565b8383516020850187f590506001600160a01b0381166116e85760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016104f3565b949350505050565b600254610100900460ff1680611709575060025460ff16155b61176c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f3565b600254610100900460ff1615801561178e576002805461ffff19166101011790555b611797826118ea565b6117a0826119d7565b80156110e8576002805461ff00191690555050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156117ec5750600090506003611899565b8460ff16601b1415801561180457508460ff16601c14155b156118155750600090506004611899565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611869573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661189257600060019250925050611899565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b016118dc878288856117b5565b935093505050935093915050565b600254610100900460ff1680611903575060025460ff16155b6119665760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f3565b600254610100900460ff16158015611988576002805461ffff19166101011790555b611990611ac4565b6035546001600160a01b038381169116146119ae576119ae82610b3b565b6117a07f44c028fe000000000000000000000000000000000000000000000000000000006110ec565b600254610100900460ff16806119f0575060025460ff16155b611a535760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f3565b600254610100900460ff16158015611a75576002805461ffff19166101011790555b611a7d611ac4565b6035546001600160a01b03838116911614611a9b57611a9b82610b3b565b6117a07f2bd57b73000000000000000000000000000000000000000000000000000000006110ec565b600254610100900460ff1680611add575060025460ff16155b611b405760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f3565b600254610100900460ff16158015611b62576002805461ffff19166101011790555b611b6b33610eeb565b8015610abf576002805461ff001916905550565b828054611b8b906122a9565b90600052602060002090601f016020900481019282611bad5760008555611bf3565b82601f10611bc65782800160ff19823516178555611bf3565b82800160010185558215611bf3579182015b82811115611bf3578235825591602001919060010190611bd8565b50611bff929150611c77565b5090565b828054611c0f906122a9565b90600052602060002090601f016020900481019282611c315760008555611bf3565b82601f10611c4a57805160ff1916838001178555611bf3565b82800160010185558215611bf3579182015b82811115611bf3578251825591602001919060010190611c5c565b5b80821115611bff5760008155600101611c78565b80356001600160a01b0381168114611ca357600080fd5b919050565b60008083601f840112611cba57600080fd5b50813567ffffffffffffffff811115611cd257600080fd5b6020830191508360208260051b85010111156111d457600080fd5b60008083601f840112611cff57600080fd5b50813567ffffffffffffffff811115611d1757600080fd5b6020830191508360208285010111156111d457600080fd5b600060208284031215611d4157600080fd5b611d4a82611c8c565b9392505050565b60008060208385031215611d6457600080fd5b823567ffffffffffffffff811115611d7b57600080fd5b611d8785828601611ca8565b90969095509350505050565b60008060008060408587031215611da957600080fd5b843567ffffffffffffffff80821115611dc157600080fd5b611dcd88838901611ca8565b90965094506020870135915080821115611de657600080fd5b50611df387828801611ca8565b95989497509550505050565b600060208284031215611e1157600080fd5b81518015158114611d4a57600080fd5b600060208284031215611e3357600080fd5b5035919050565b600060208284031215611e4c57600080fd5b5051919050565b600080600060408486031215611e6857600080fd5b83359250602084013567ffffffffffffffff811115611e8657600080fd5b611e9286828701611ced565b9497909650939450505050565b60008060408385031215611eb257600080fd5b82359150602083013567ffffffffffffffff80821115611ed157600080fd5b818501915085601f830112611ee557600080fd5b813581811115611ef757611ef7612341565b604051601f8201601f19908116603f01168101908382118183101715611f1f57611f1f612341565b81604052828152886020848701011115611f3857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600060208284031215611f6c57600080fd5b8135611d4a81612357565b600060208284031215611f8957600080fd5b8151611d4a81612357565b600080600080600060808688031215611fac57600080fd5b85359450611fbc60208701611c8c565b935060408601359250606086013567ffffffffffffffff811115611fdf57600080fd5b611feb88828901611ced565b969995985093965092949392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845260005b8181101561204b5760208185018101518683018201520161202f565b8181111561205d576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038516815283602082015260606040820152600061209b606083018486611ffc565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156120dd578351835292840192918401916001016120c1565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561213e57603f1988860301845261212c858351612025565b94509285019290850190600101612110565b5092979650505050505050565b8281526040602082015260006116e86040830184612025565b6020815260006116e8602083018486611ffc565b602081526000611d4a6020830184612025565b600060208083526000845481600182811c9150808316806121ad57607f831692505b8583108114156121cb57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156121e857600181146121f957612224565b60ff19861682528782019650612224565b60008b81526020902060005b8681101561221e57815484820152908501908901612205565b83019750505b50949998505050505050505050565b6000808335601e1984360301811261224a57600080fd5b83018035915067ffffffffffffffff82111561226557600080fd5b6020019150368190038213156111d457600080fd5b6000821982111561228d5761228d6122ff565b500190565b6000828210156122a4576122a46122ff565b500390565b600181811c908216806122bd57607f821691505b602082108114156122de57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122f8576122f86122ff565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610abf57600080fdfea26469706673582212205d3eab548a0cb553fc4816d1dc17f7a8b58d72f71aa56903fe6fc1b212faaf1d64736f6c63430008060033';

export class LSP3AccountInit__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<LSP3AccountInit> {
    return super.deploy(overrides || {}) as Promise<LSP3AccountInit>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LSP3AccountInit {
    return super.attach(address) as LSP3AccountInit;
  }
  connect(signer: Signer): LSP3AccountInit__factory {
    return super.connect(signer) as LSP3AccountInit__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LSP3AccountInitInterface {
    return new utils.Interface(_abi) as LSP3AccountInitInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LSP3AccountInit {
    return new Contract(address, _abi, signerOrProvider) as LSP3AccountInit;
  }
}
